-- MODULE 4 (SQL) HR
-- 1)  DISPLAY ALL INFORMATION IN THE TABLES EMP AND DEPT
USE HR;
SELECT * FROM EMPLOYEES;
SELECT * FROM DEPARTMENTS;

SELECT * FROM  EMPLOYEES,DEPARTMENTS;
-- 2) DISPLAY ONLY THE HIRE DATE AND EMPLOYEE NAME FOR EACH EMPLOYEE  
SELECT HIRE_DATE,FIRST_NAME,LAST_NAME FROM EMPLOYEES;
-- 3) DISPLAY THE ENAME CONCATENATED WITH THE JOB ID, SEPARATED BY A COMMA AND SPACE, AND NAME THE COLUMN EMPLOYEE AND TITLE
SELECT CONCAT(FIRST_NAME, ', ', JOB_ID) AS "EMPLOYEE AND TITLE"
FROM EMPLOYEES;
--  4) DISPLAY THE HIRE DATE, NAME AND DEPARTMENT NUMBER FOR ALL CLERKS
SELECT HIRE_DATE,FIRST_NAME,DEPARTMENT_ID
FROM EMPLOYEES 
WHERE JOB_ID IN ('SH_CLERK','ST_CLERK');
--  5. CREATE A QUERY TO DISPLAY ALL THE DATA FROM THE EMP TABLE. SEPARATE EACH COLUMN BY A COMMA. NAME THE COLUMN THE OUTPUT
SELECT * FROM EMPLOYEES;

-- 6. DISPLAY THE NAMES AND SALARIES OF ALL EMPLOYEES WITH A SALARY GREATER THAN 2000.
SELECT FIRST_NAME, SALARY FROM EMPLOYEES WHERE SALARY > 2000;

-- 7. DISPLAY THE NAMES AND DATES OF EMPLOYEES WITH THE COLUMN HEADERS "NAME" AND "START DATE"
SELECT FIRST_NAME AS NAME, HIRE_DATE AS "START DATE" FROM EMPLOYEES;

-- 8. DISPLAY THE NAMES AND HIRE DATES OF ALL EMPLOYEES IN THE ORDER THEY WERE HIRED.
SELECT FIRST_NAME, HIRE_DATE FROM EMPLOYEES ORDER BY HIRE_DATE;

-- 9. DISPLAY THE NAMES AND SALARIES OF ALL EMPLOYEES IN REVERSE SALARY ORDER.
SELECT FIRST_NAME, SALARY FROM EMPLOYEES ORDER BY SALARY DESC;

-- 10. DISPLAY 'ENAME" AND "DEPTNO" WHO ARE ALL EARNED COMMISSION AND DISPLAY SALARY IN REVERSE ORDER.
SELECT FIRST_NAME, DEPARTMENT_ID FROM EMPLOYEES WHERE COMMISSION_PCT IS NOT NULL ORDER BY SALARY DESC;

-- 11. DISPLAY THE LAST NAME AND JOB TITLE OF ALL EMPLOYEES WHO DO NOT HAVE A MANAGER
SELECT FIRST_NAME, JOB_ID FROM EMPLOYEES WHERE MANAGER_ID IS NULL;
-- 12. DISPLAY THE LAST NAME, JOB, AND SALARY FOR ALL EMPLOYEES WHOSE JOB IS SALES REPRESENTATIVE OR STOCK CLERK AND WHOSE SALARY IS NOT EQUAL TO $2,500, $3,500, OR $5,000
SELECT FIRST_NAME, JOB_ID, SALARY FROM EMPLOYEES
WHERE (JOB_ID = 'SA_MAN' OR JOB_ID = 'ST_CLERK') AND SALARY NOT IN (2500, 3500, 5000);

-- 1) DISPLAY THE MAXIMUM, MINIMUM AND AVERAGE SALARY AND COMMISSION EARNED.
SELECT 
    MAX(SALARY) AS MAX_SALARY,
    MIN(SALARY) AS MIN_SALARY,
    AVG(SALARY) AS AVG_SALARY,
    MAX(COMMISSION_PCT) AS MAX_COMMISSION_PCT,
    MIN(COMMISSION_PCT) AS MIN_COMMISSION_PCT,
    AVG(COMMISSION_PCT) AS AVG_COMMISSION_PCT
FROM 
    EMPLOYEES;
-- 2) DISPLAY THE DEPARTMENT NUMBER, TOTAL SALARY PAYOUT AND TOTAL COMMISSION PAYOUT FOR EACH DEPARTMENT.
SELECT 
    DEPARTMENT_ID,
    SUM(SALARY) AS TOTAL_SALARY_PAYOUT,
    SUM(COMMISSION_PCT) AS TOTAL_COMMISSION_PAYOUT
FROM 
    EMPLOYEES
GROUP BY 
    DEPARTMENT_ID;
    
-- 3) DISPLAY THE DEPARTMENT NUMBER AND NUMBER OF EMPLOYEES IN EACH DEPARTMENT.
SELECT 
    DEPARTMENT_ID,
    COUNT(*) AS NUM_EMPLOYEES
FROM 
    EMPLOYEES
GROUP BY 
    DEPARTMENT_ID;

-- 4) DISPLAY THE DEPARTMENT NUMBER AND TOTAL SALARY OF EMPLOYEES IN EACH DEPARTMENT.
SELECT 
    DEPARTMENT_ID,
    SUM(SALARY) AS TOTAL_SALARY
FROM 
    EMPLOYEES
GROUP BY 
    DEPARTMENT_ID;

-- 5) DISPLAY THE EMPLOYEE'S NAME WHO DOESN'T EARN A COMMISSION. ORDER THE RESULT SET WITHOUT USING THE COLUMN NAME
SELECT 
    FIRST_NAME
FROM 
    EMPLOYEES
WHERE 
    COMMISSION_PCT IS NULL
ORDER BY FIRST_NAME;

-- 6) DISPLAY THE EMPLOYEES NAME, DEPARTMENT ID AND COMMISSION. IF AN EMPLOYEE DOESN'T EARN THE COMMISSION, THEN DISPLAY AS 'NO COMMISSION'. NAME THE COLUMNS APPROPRIATELY
SELECT 
    FIRST_NAME,
    DEPARTMENT_ID,
    COALESCE(COMMISSION_PCT, 'NO COMMISSION') AS COMMISSION
FROM 
    EMPLOYEES;

-- 8) DISPLAY THE EMPLOYEE'S NAME, DEPARTMENT ID WHO HAVE THE FIRST NAME SAME AS ANOTHER EMPLOYEE IN THE SAME DEPARTMENT
SELECT
    FIRST_NAME,
    DEPARTMENT_ID
FROM 
    EMPLOYEES
WHERE 
    FIRST_NAME IN (
        SELECT 
           FIRST_NAME 
           
        FROM 
            EMPLOYEES
        GROUP BY 
            FIRST_NAME, DEPARTMENT_ID
        HAVING 
            COUNT(*) > 1
    );

-- 9) DISPLAY THE SUM OF SALARIES OF THE EMPLOYEES WORKING UNDER EACH MANAGER.
SELECT 
    MANAGER_ID,
    SUM(SALARY) AS TOTAL_SALARY
FROM 
    EMPLOYEES
GROUP BY 
    MANAGER_ID;

-- 10) SELECT THE MANAGERS NAME, THE COUNT OF EMPLOYEES WORKING UNDER AND THE DEPARTMENT ID OF THE MANAGER.
SELECT 
    MANAGER_ID,
    COUNT(*) AS NUM_EMPLOYEES,
    DEPARTMENT_ID
FROM 
    EMPLOYEES
WHERE 
    MANAGER_ID IS NOT NULL
GROUP BY 
    MANAGER_ID , DEPARTMENT_ID;

-- 11) SELECT THE EMPLOYEE NAME, DEPARTMENT ID, AND THE SALARY. GROUP THE RESULT WITH THE MANAGER NAME AND THE EMPLOYEE LAST NAME SHOULD HAVE SECOND LETTER 'A!
SELECT 
    MANAGER_ID,
    EMPLOYEE_ID,
    DEPARTMENT_ID,
    FIRST_NAME,
    SALARY
FROM 
    EMPLOYEES
WHERE 
    FIRST_NAME LIKE '%A%'
GROUP BY 
    MANAGER_ID, FIRST_NAME,EMPLOYEE_ID, DEPARTMENT_ID, SALARY;

-- 12) DISPLAY THE AVERAGE OF SUM OF THE SALARIES AND GROUP THE RESULT WITH THE DEPARTMENT ID. ORDER THE RESULT WITH THE DEPARTMENT ID.
SELECT department_id, AVG(salary) AS average_salary
FROM employees
GROUP BY department_id
ORDER BY department_id;

-- 13) SELECT THE MAXIMUM SALARY OF EACH DEPARTMENT ALONG WITH THE DEPARTMENT ID
SELECT 
    DEPARTMENT_ID,
    MAX(SALARY) AS MAX_SALARY
FROM 
    EMPLOYEES
GROUP BY 
    DEPARTMENT_ID;

-- 14) DISPLAY THE COMMISSION, IF NOT NULL DISPLAY 10% OF SALARY, IF NULL DISPLAY A DEFAULT VALUE 1
SELECT 
    COMMISSION_PCT,
    CASE 
        WHEN COMMISSION_PCT IS NOT NULL THEN SALARY * 0.10
        ELSE 1
    END AS CALCULATED_COMMISSION
FROM 
    EMPLOYEES;
    -- 1. WRITE A QUERY THAT DISPLAYS THE EMPLOYEE'S LAST NAMES ONLY FROM THE STRING'S 2-5TH POSITION WITH THE FIRST LETTER CAPITALIZED AND ALL OTHER LETTERS LOWERCASE, GIVE EACH COLUMN ANAPPROPRIATE LABEL.
SELECT 
    UPPER(SUBSTRING(LAST_NAME, 2, 4)) AS MODIFIEDLASTNAME
FROM EMPLOYEES;


-- 2. WRITE A QUERY THAT DISPLAYS THE EMPLOYEE'S FIRST NAME AND LAST NAME ALONG WITH A " IN BETWEEN FOR E.G.: FIRST NAME : RAM; LAST NAME : KUMAR THEN RAM-KUMAR. ALSO DISPLAYS THE MONTH ON WHICH THE EMPLOYEE HAS JOINED.
SELECT 
    FIRST_NAME || '-' || LAST_NAME AS FULLNAME,
    CONCAT(HIRE_DATE, 'MONTH') AS JOINMONTH
FROM EMPLOYEES;

-- 3. WRITE A QUERY TO DISPLAY THE EMPLOYEE'S LAST NAME AND IF HALF OF THE SALARY IS GREATER THAN TEN THOUSAND THEN INCREASE THE SALARY BY 10% ELSE BY 11.5% ALONG WITH THE BONUS AMOUNT OF 1500 EACH. PROVIDE EACH COLUMN AN APPROPRIATE LABEL.
SELECT 
    LAST_NAME,
    CASE WHEN SALARY / 2 > 10000 THEN ROUND(SALARY * 1.10, 2) ELSE ROUND(SALARY * 1.115, 2) END AS MODIFIEDSALARY,
    1500 AS BONUSAMOUNT
FROM EMPLOYEES;

-- 4. DISPLAY THE EMPLOYEE ID BY APPENDING TWO ZEROS AFTER 2ND DIGIT AND 'E' IN THE END, DEPARTMENT ID, SALARY AND THE MANAGER NAME ALL IN UPPER CASE, IF THE MANAGER NAME CONSISTS OF 'Z' REPLACE IT WITH '$!
SELECT 
    LPAD(SUBSTR(EMPLOYEE_ID, 1, 2) || '00' || 'E', 5, '0') AS MODIFIEDEMPLOYEEID,
    UPPER(DEPARTMENT_ID) AS MODIFIEDDEPARTMENTID,
    CONCAT(SALARY, '$99999.99') AS MODIFIEDSALARY,
    REPLACE(UPPER(MANAGER_ID), 'Z', '$!') AS MODIFIEDMANAGERNAME
FROM EMPLOYEES;


-- 5. WRITE A QUERY THAT DISPLAYS THE EMPLOYEE'S LAST NAMES WITH THE FIRST LETTER CAPITALIZED AND ALL OTHER LETTERS LOWERCASE, AND THE LENGTH OF THE NAMES, FOR ALL EMPLOYEES WHOSE NAME STARTS WITH J, A, OR M. GIVE EACH COLUMN AN APPROPRIATE LABEL. SORT THE RESULTS BY THE
-- EMPLOYEES' LAST NAMES
SELECT 
    UPPER(SUBSTR(LAST_NAME, 1, 1)) || LOWER(SUBSTR(LAST_NAME, 2)) AS MODIFIEDLASTNAME,
    LENGTH(LAST_NAME) AS NAMELENGTH
FROM EMPLOYEES
WHERE LAST_NAME LIKE 'J%' OR LAST_NAME LIKE 'A%' OR LAST_NAME LIKE 'M%'
ORDER BY LAST_NAME;

-- 6. CREATE A QUERY TO DISPLAY THE LAST NAME AND SALARY FOR ALL EMPLOYEES. FORMAT THE SALARY TO BE 15 CHARACTERS LONG, LEFT-PADDED WITH $. LABEL THE COLUMN SALARY
SELECT last_name, CONCAT('$', LPAD(salary, 15, '$')) AS Salary
FROM EMPLOYEES;

-- 7. DISPLAY THE EMPLOYEE'S NAME IF IT IS A PALINDROME
SELECT 
    CONCAT(FIRST_NAME, ' ', LAST_NAME) AS FULLNAME
FROM EMPLOYEES
WHERE CONCAT(FIRST_NAME, ' ', LAST_NAME) = REVERSE(CONCAT(FIRST_NAME, ' ', LAST_NAME));



-- 9. FROM LOCATIONS TABLE, EXTRACT THE WORD BETWEEN FIRST AND SECOND SPACE FROM THE STREET ADDRESS COLUMN.
SELECT 
    SUBSTRING_INDEX(SUBSTRING_INDEX(STREET_ADDRESS, ' ', 2), ' ', -1) AS EXTRACTEDWORD
FROM LOCATIONS;

-- 10. EXTRACT FIRST LETTER FROM FIRST NAME COLUMN AND APPEND IT WITH THE LAST NAME. ALSO ADD "@SYSTECHUSA.COM" AT THE END. NAME THE COLUMN AS E-MAIL ADDRESS. ALL CHARACTERS SHOULD BE IN LOWER CASE. DISPLAY THIS ALONG WITH THEIR FIRST NAME.
SELECT 
    CONCAT(LOWER(SUBSTRING(FIRST_NAME, 1, 1)), LAST_NAME, '@SYSTECHUSA.COM') AS "E-MAIL ADDRESS",
    FIRST_NAME
FROM EMPLOYEES;

-- 11. DISPLAY THE NAMES AND JOB TITLES OF ALL EMPLOYEES WITH THE SAME JOB AS TRENNA.
SELECT 
    FIRST_NAME || ' ' || LAST_NAME AS FULLNAME,
    JOB_ID
FROM EMPLOYEES
WHERE JOB_ID = (SELECT JOB_ID FROM EMPLOYEES WHERE FIRST_NAME = 'TRENNA');

-- 13. DISPLAY THE NAME OF THE EMPLOYEE WHOSE SALARY IS THE LOWEST.
SELECT 
    FIRST_NAME || ' ' || LAST_NAME AS FULLNAME
FROM EMPLOYEES
WHERE SALARY = (SELECT MIN(SALARY) FROM EMPLOYEES);

-- 14. DISPLAY THE NAMES OF ALL EMPLOYEES EXCEPT THE LOWEST PAID. 
SELECT 
    FIRST_NAME || ' ' || LAST_NAME AS FULLNAME
FROM EMPLOYEES
WHERE SALARY > (SELECT MIN(SALARY) FROM EMPLOYEES);
-- 1. WRITE A QUERY TO DISPLAY THE LAST NAME, DEPARTMENT NUMBER, DEPARTMENT NAME FOR ALL EMPLOYEES.
SELECT E.LAST_NAME, E.DEPARTMENT_ID, D.DEPARTMENT_NAME
FROM EMPLOYEES E
JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID;

-- 2. CREATE A UNIQUE LIST OF ALL JOBS THAT ARE IN DEPARTMENT 4. INCLUDE THE LOCATION OF THE DEPARTMENT IN THE OUTPUT.
SELECT DISTINCT J.JOB_TITLE, D.LOCATION_ID, L.CITY
FROM JOBS J
JOIN EMPLOYEES E ON J.JOB_ID = E.JOB_ID
JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
JOIN LOCATIONS L ON D.LOCATION_ID = L.LOCATION_ID
WHERE D.DEPARTMENT_ID = 4;

-- 3. WRITE A QUERY TO DISPLAY THE EMPLOYEE LAST NAME,DEPARTMENT NAME,LOCATION ID AND CITY OF ALL EMPLOYEES WHO EARN COMMISSION.
SELECT E.LAST_NAME, D.DEPARTMENT_NAME, D.LOCATION_ID, L.CITY
FROM EMPLOYEES E
JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
JOIN LOCATIONS L ON D.LOCATION_ID = L.LOCATION_ID
WHERE E.COMMISSION_PCT IS NOT NULL;

-- 4. DISPLAY THE EMPLOYEE LAST NAME AND DEPARTMENT NAME OF ALL EMPLOYEES WHO HAVE AN 'A' IN THEIR LAST NAME
SELECT E.LAST_NAME, D.DEPARTMENT_NAME
FROM EMPLOYEES E
JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
WHERE E.LAST_NAME LIKE '%A%';

-- 5. WRITE A QUERY TO DISPLAY THE LAST NAME,JOB,DEPARTMENT NUMBER AND DEPARTMENT NAME FOR ALL EMPLOYEES WHO WORK IN ATLANTA.
SELECT E.LAST_NAME, J.JOB_TITLE, E.DEPARTMENT_ID, D.DEPARTMENT_NAME
FROM EMPLOYEES E
JOIN JOBS J ON E.JOB_ID = J.JOB_ID
JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
JOIN LOCATIONS L ON D.LOCATION_ID = L.LOCATION_ID
WHERE L.CITY = 'ATLANTA';

-- 6. DISPLAY THE EMPLOYEE LAST NAME AND EMPLOYEE NUMBER ALONG WITH THEIR MANAGER'S LAST NAME AND MANAGER NUMBER.
SELECT E.LAST_NAME AS EMPLOYEE_NAME, E.EMPLOYEE_ID, M.LAST_NAME AS MANAGER_NAME, M.EMPLOYEE_ID AS MANAGER_ID
FROM EMPLOYEES E
JOIN EMPLOYEES M ON E.MANAGER_ID = M.EMPLOYEE_ID;

-- 7. DISPLAY THE EMPLOYEE LAST NAME AND EMPLOYEE NUMBER ALONG WITH THEIR MANAGER'S LAST NAME AND MANAGER NUMBER (INCLUDING THE EMPLOYEES WHO HAVE NO MANAGER).
SELECT E.LAST_NAME AS EMPLOYEE_NAME, E.EMPLOYEE_ID, M.LAST_NAME AS MANAGER_NAME, M.EMPLOYEE_ID AS MANAGER_ID
FROM EMPLOYEES E
LEFT JOIN EMPLOYEES M ON E.MANAGER_ID = M.EMPLOYEE_ID;

-- 8. CREATE A QUERY THAT DISPLAYS EMPLOYEES LAST NAME,DEPARTMENT NUMBER,AND ALL THE EMPLOYEES WHO WORK IN THE SAME DEPARTMENT AS A GIVEN EMPLOYEE.

    
-- 9. CREATE A QUERY THAT DISPLAYS THE NAME,JOB,DEPARTMENT NAME,SALARY,GRADE FOR ALL EMPLOYEES. DERIVE GRADE BASED ON SALARY(>=50000=A, >=30000=B,<30000=C)
SELECT E.FIRST_NAME || ' ' || E.LAST_NAME AS NAME, J.JOB_TITLE, D.DEPARTMENT_NAME, E.SALARY,
       CASE WHEN E.SALARY >= 50000 THEN 'A'
            WHEN E.SALARY >= 30000 THEN 'B'
            ELSE 'C'
       END AS GRADE
FROM EMPLOYEES E
JOIN JOBS J ON E.JOB_ID = J.JOB_ID
JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID;

-- 10. DISPLAY THE NAMES AND HIRE DATE FOR ALL EMPLOYEES WHO WERE HIRED BEFORE THEIR MANAGERS ALONG WITHE THEIR MANAGER NAMES AND HIRE DATE. LABEL THE COLUMNS AS EMPLOYEE NAME, EMP_HIRE_DATE,MANAGER NAME,MAN_HIRE_DATE

USE HR;


-- 2. CREATE A QUERY TO DISPLAY THE EMPLOYEE NUMBERS AND LAST NAMES OF ALL EMPLOYEES WHO EARN MORE THAN THE AVERAGE SALARY. SORT THE RESULTS IN ASCENDING ORDER OF SALARY.
SELECT EMPLOYEE_ID, LAST_NAME
FROM EMPLOYEES
WHERE SALARY > (SELECT AVG(SALARY) FROM EMPLOYEES)
ORDER BY SALARY ASC;

-- 3. WRITE A QUERY THAT DISPLAYS THE EMPLOYEE NUMBERS AND LAST NAMES OF ALL EMPLOYEES WHO WORK IN A DEPARTMENT WITH ANY EMPLOYEE WHOSE LAST NAME CONTAINS A' U
SELECT EMPLOYEE_ID, LAST_NAME
FROM EMPLOYEES
WHERE DEPARTMENT_ID IN (SELECT DEPARTMENT_ID FROM EMPLOYEES WHERE LAST_NAME LIKE '%U%');

-- 4. DISPLAY THE LAST NAME, DEPARTMENT NUMBER, AND JOB ID OF ALL EMPLOYEES WHOSE DEPARTMENT LOCATION IS ATLANTA.
SELECT LAST_NAME, DEPARTMENT_ID, JOB_ID
FROM EMPLOYEES
WHERE DEPARTMENT_ID IN (SELECT DEPARTMENT_ID FROM DEPARTMENTS WHERE LOCATION_ID = 'ATLANTA');

-- 5. DISPLAY THE LAST NAME AND SALARY OF EVERY EMPLOYEE WHO REPORTS TO FILLMORE.
SELECT LAST_NAME, SALARY
FROM EMPLOYEES
WHERE MANAGER_ID = (SELECT EMPLOYEE_ID FROM EMPLOYEES WHERE LAST_NAME = 'FILLMORE');

-- 6. DISPLAY THE DEPARTMENT NUMBER, LAST NAME, AND JOB ID FOR EVERY EMPLOYEE IN THE OPERATIONS DEPARTMENT.
SELECT DEPARTMENT_ID, LAST_NAME, JOB_ID
FROM EMPLOYEES
WHERE DEPARTMENT_ID = (SELECT DEPARTMENT_ID FROM DEPARTMENTS WHERE DEPARTMENT_NAME = 'OPERATIONS');

-- 7. MODIFY THE ABOVE QUERY TO DISPLAY THE EMPLOYEE NUMBERS, LAST NAMES, AND SALARIES OF ALL EMPLOYEES WHO EARN MORE THAN THE AVERAGE SALARY AND WHO WORK IN A DEPARTMENT WITH ANY EMPLOYEE WITH A 'U'IN THEIR NAME.
SELECT EMPLOYEE_ID, LAST_NAME, SALARY
FROM EMPLOYEES
WHERE SALARY > (SELECT AVG(SALARY) FROM EMPLOYEES)
AND DEPARTMENT_ID IN (SELECT DEPARTMENT_ID FROM EMPLOYEES WHERE LAST_NAME LIKE '%U%');

-- 8. DISPLAY THE NAMES OF ALL EMPLOYEES WHOSE JOB TITLE IS THE SAME AS ANYONE IN THE SALES DEPT.
SELECT E.LAST_NAME
FROM EMPLOYEES E
JOIN EMPLOYEES S ON E.JOB_ID = S.JOB_ID AND S.DEPARTMENT_ID = (SELECT DEPARTMENT_ID FROM DEPARTMENTS WHERE DEPARTMENT_NAME = 'SALES');

-- 9. WRITE A COMPOUND QUERY TO PRODUCE A LIST OF EMPLOYEES SHOWING RAISE PERCENTAGES, EMPLOYEE IDS, AND SALARIES. EMPLOYEES IN DEPARTMENT 1 AND 3 ARE GIVEN A 5% RAISE, EMPLOYEES IN DEPARTMENT 2 ARE GIVEN A 10% RAISE, EMPLOYEES IN DEPARTMENTS 4 AND 5 ARE GIVEN A 15% RAISE, AND EMPLOYEES IN DEPARTMENT 6 ARE NOT GIVEN A RAISE.
SELECT EMPLOYEE_ID, SALARY, SALARY * 
    CASE 
        WHEN DEPARTMENT_ID IN (1, 3) THEN 1.05
        WHEN DEPARTMENT_ID = 2 THEN 1.10
        WHEN DEPARTMENT_ID IN (4, 5) THEN 1.15
        ELSE 1.0
    END AS RAISE_PERCENTAGE
FROM EMPLOYEES;

-- 10. WRITE A QUERY TO DISPLAY THE TOP THREE EARNERS IN THE EMPLOYEES TABLE. DISPLAY THEIR LAST NAMES AND SALARIES.
SELECT LAST_NAME, SALARY
FROM EMPLOYEES
ORDER BY SALARY DESC
;


-- 12. DISPLAY THE MANAGERS (NAME) WITH TOP THREE SALARIES ALONG WITH THEIR SALARIES AND DEPARTMENT INFORMATION.
SELECT E.LAST_NAME AS MANAGER_NAME, E.SALARY AS MANAGER_SALARY, D.DEPARTMENT_NAME
FROM EMPLOYEES E
JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
WHERE E.EMPLOYEE_ID IN (
    SELECT MANAGER_ID
    FROM EMPLOYEES
    WHERE MANAGER_ID IS NOT NULL
    ORDER BY SALARY DESC

);
 -- DISPLAY FIRST NAMES OF ALL EMPLOYEES WITH INITCAPS.
SELECT UPPER (first_name) FROM employees;
SELECT concat(UPPER(SUBSTRING(first_name,1,1)),
LOWER(SUBSTRING(first_name,2)))
FROM employees; 









